"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/hedera.ts":
/*!*****************************!*\
  !*** ./src/utils/hedera.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccountInfo: function() { return /* binding */ getAccountInfo; },\n/* harmony export */   getTokenHolders: function() { return /* binding */ getTokenHolders; },\n/* harmony export */   getTokenInfo: function() { return /* binding */ getTokenInfo; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nconst MIRROR_NODE_URL = \"https://mainnet-public.mirrornode.hedera.com\";\nasync function getTokenInfo(tokenId) {\n    console.log(\"Fetching token info from: \".concat(MIRROR_NODE_URL, \"/api/v1/tokens/\").concat(tokenId));\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(MIRROR_NODE_URL, \"/api/v1/tokens/\").concat(tokenId));\n    console.log(\"Token Info Response:\", {\n        name: response.data.name,\n        symbol: response.data.symbol,\n        decimals: response.data.decimals,\n        total_supply: response.data.total_supply,\n        max_supply: response.data.max_supply,\n        treasury_account_id: response.data.treasury_account_id,\n        admin_key: response.data.admin_key\n    });\n    return response.data;\n}\nasync function getTokenHolders(tokenId) {\n    let limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 50;\n    var _response_data_links;\n    const tokenInfo = await getTokenInfo(tokenId);\n    // Get first page with a larger limit to likely capture all significant holders\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(MIRROR_NODE_URL, \"/api/v1/tokens/\").concat(tokenId, \"/balances\"), {\n        params: {\n            limit: 100,\n            order: \"desc\"\n        }\n    });\n    const holders = response.data.balances;\n    const totalAccounts = ((_response_data_links = response.data.links) === null || _response_data_links === void 0 ? void 0 : _response_data_links.next) ? \"Over 100\" : holders.length;\n    const decimals = Number(tokenInfo.decimals);\n    const oneToken = BigInt(10 ** decimals);\n    // Calculate statistics from the first page\n    const stats = {\n        totalAccounts: totalAccounts,\n        accountsAboveOne: holders.filter((holder)=>BigInt(holder.balance) >= oneToken).length\n    };\n    // Sort holders by balance\n    const sortedHolders = holders.sort((a, b)=>{\n        const balanceA = BigInt(a.balance);\n        const balanceB = BigInt(b.balance);\n        return balanceB > balanceA ? 1 : balanceB < balanceA ? -1 : 0;\n    }).slice(0, limit);\n    const totalSupplyBigInt = BigInt(tokenInfo.total_supply);\n    const formattedHolders = sortedHolders.map((holder)=>{\n        const holderBalance = BigInt(holder.balance);\n        const percentage = Number(holderBalance * BigInt(1000000) / totalSupplyBigInt) / 10000;\n        return {\n            account: holder.account,\n            balance: holder.balance,\n            percentage\n        };\n    });\n    return {\n        holders: formattedHolders,\n        stats\n    };\n}\nasync function getAccountInfo(accountId) {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(MIRROR_NODE_URL, \"/api/v1/accounts/\").concat(accountId));\n    return response.data;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cGFjazovL19OX0UvLi9zcmMvdXRpbHMvaGVkZXJhLnRzPzZhOTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuY29uc3QgTUlSUk9SX05PREVfVVJMID0gJ2h0dHBzOi8vbWFpbm5ldC1wdWJsaWMubWlycm9ybm9kZS5oZWRlcmEuY29tJztcblxuaW50ZXJmYWNlIFRva2VuSG9sZGVyIHtcbiAgYWNjb3VudDogc3RyaW5nO1xuICBiYWxhbmNlOiBzdHJpbmc7XG4gIHBlcmNlbnRhZ2U6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIFRva2VuSG9sZGVyc1Jlc3BvbnNlIHtcbiAgaG9sZGVyczogVG9rZW5Ib2xkZXJbXTtcbiAgc3RhdHM6IHtcbiAgICB0b3RhbEFjY291bnRzOiBudW1iZXIgfCBzdHJpbmc7XG4gICAgYWNjb3VudHNBYm92ZU9uZTogbnVtYmVyO1xuICB9O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VG9rZW5JbmZvKHRva2VuSWQ6IHN0cmluZykge1xuICBjb25zb2xlLmxvZyhgRmV0Y2hpbmcgdG9rZW4gaW5mbyBmcm9tOiAke01JUlJPUl9OT0RFX1VSTH0vYXBpL3YxL3Rva2Vucy8ke3Rva2VuSWR9YCk7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGAke01JUlJPUl9OT0RFX1VSTH0vYXBpL3YxL3Rva2Vucy8ke3Rva2VuSWR9YCk7XG4gIGNvbnNvbGUubG9nKCdUb2tlbiBJbmZvIFJlc3BvbnNlOicsIHtcbiAgICBuYW1lOiByZXNwb25zZS5kYXRhLm5hbWUsXG4gICAgc3ltYm9sOiByZXNwb25zZS5kYXRhLnN5bWJvbCxcbiAgICBkZWNpbWFsczogcmVzcG9uc2UuZGF0YS5kZWNpbWFscyxcbiAgICB0b3RhbF9zdXBwbHk6IHJlc3BvbnNlLmRhdGEudG90YWxfc3VwcGx5LFxuICAgIG1heF9zdXBwbHk6IHJlc3BvbnNlLmRhdGEubWF4X3N1cHBseSxcbiAgICB0cmVhc3VyeV9hY2NvdW50X2lkOiByZXNwb25zZS5kYXRhLnRyZWFzdXJ5X2FjY291bnRfaWQsXG4gICAgYWRtaW5fa2V5OiByZXNwb25zZS5kYXRhLmFkbWluX2tleSxcbiAgfSk7XG4gIHJldHVybiByZXNwb25zZS5kYXRhO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VG9rZW5Ib2xkZXJzKHRva2VuSWQ6IHN0cmluZywgbGltaXQ6IG51bWJlciA9IDUwKTogUHJvbWlzZTxUb2tlbkhvbGRlcnNSZXNwb25zZT4ge1xuICBjb25zdCB0b2tlbkluZm8gPSBhd2FpdCBnZXRUb2tlbkluZm8odG9rZW5JZCk7XG4gIFxuICAvLyBHZXQgZmlyc3QgcGFnZSB3aXRoIGEgbGFyZ2VyIGxpbWl0IHRvIGxpa2VseSBjYXB0dXJlIGFsbCBzaWduaWZpY2FudCBob2xkZXJzXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGAke01JUlJPUl9OT0RFX1VSTH0vYXBpL3YxL3Rva2Vucy8ke3Rva2VuSWR9L2JhbGFuY2VzYCwge1xuICAgIHBhcmFtczoge1xuICAgICAgbGltaXQ6IDEwMCxcbiAgICAgIG9yZGVyOiAnZGVzYydcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGhvbGRlcnMgPSByZXNwb25zZS5kYXRhLmJhbGFuY2VzO1xuICBjb25zdCB0b3RhbEFjY291bnRzID0gcmVzcG9uc2UuZGF0YS5saW5rcz8ubmV4dCA/ICdPdmVyIDEwMCcgOiBob2xkZXJzLmxlbmd0aDtcblxuICBjb25zdCBkZWNpbWFscyA9IE51bWJlcih0b2tlbkluZm8uZGVjaW1hbHMpO1xuICBjb25zdCBvbmVUb2tlbiA9IEJpZ0ludCgxMCAqKiBkZWNpbWFscyk7XG5cbiAgLy8gQ2FsY3VsYXRlIHN0YXRpc3RpY3MgZnJvbSB0aGUgZmlyc3QgcGFnZVxuICBjb25zdCBzdGF0cyA9IHtcbiAgICB0b3RhbEFjY291bnRzOiB0b3RhbEFjY291bnRzLFxuICAgIGFjY291bnRzQWJvdmVPbmU6IGhvbGRlcnMuZmlsdGVyKGhvbGRlciA9PiBCaWdJbnQoaG9sZGVyLmJhbGFuY2UpID49IG9uZVRva2VuKS5sZW5ndGhcbiAgfTtcblxuICAvLyBTb3J0IGhvbGRlcnMgYnkgYmFsYW5jZVxuICBjb25zdCBzb3J0ZWRIb2xkZXJzID0gaG9sZGVyc1xuICAgIC5zb3J0KChhLCBiKSA9PiB7XG4gICAgICBjb25zdCBiYWxhbmNlQSA9IEJpZ0ludChhLmJhbGFuY2UpO1xuICAgICAgY29uc3QgYmFsYW5jZUIgPSBCaWdJbnQoYi5iYWxhbmNlKTtcbiAgICAgIHJldHVybiBiYWxhbmNlQiA+IGJhbGFuY2VBID8gMSA6IGJhbGFuY2VCIDwgYmFsYW5jZUEgPyAtMSA6IDA7XG4gICAgfSlcbiAgICAuc2xpY2UoMCwgbGltaXQpO1xuXG4gIGNvbnN0IHRvdGFsU3VwcGx5QmlnSW50ID0gQmlnSW50KHRva2VuSW5mby50b3RhbF9zdXBwbHkpO1xuXG4gIGNvbnN0IGZvcm1hdHRlZEhvbGRlcnMgPSBzb3J0ZWRIb2xkZXJzLm1hcChob2xkZXIgPT4ge1xuICAgIGNvbnN0IGhvbGRlckJhbGFuY2UgPSBCaWdJbnQoaG9sZGVyLmJhbGFuY2UpO1xuICAgIGNvbnN0IHBlcmNlbnRhZ2UgPSBOdW1iZXIoKGhvbGRlckJhbGFuY2UgKiBCaWdJbnQoMTAwMDAwMCkgLyB0b3RhbFN1cHBseUJpZ0ludCkpIC8gMTAwMDA7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIGFjY291bnQ6IGhvbGRlci5hY2NvdW50LFxuICAgICAgYmFsYW5jZTogaG9sZGVyLmJhbGFuY2UsXG4gICAgICBwZXJjZW50YWdlXG4gICAgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIHtcbiAgICBob2xkZXJzOiBmb3JtYXR0ZWRIb2xkZXJzLFxuICAgIHN0YXRzXG4gIH07XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBY2NvdW50SW5mbyhhY2NvdW50SWQ6IHN0cmluZykge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgJHtNSVJST1JfTk9ERV9VUkx9L2FwaS92MS9hY2NvdW50cy8ke2FjY291bnRJZH1gKTtcbiAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG59XG4iXSwibmFtZXMiOlsiYXhpb3MiLCJNSVJST1JfTk9ERV9VUkwiLCJnZXRUb2tlbkluZm8iLCJ0b2tlbklkIiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwiZ2V0IiwibmFtZSIsImRhdGEiLCJzeW1ib2wiLCJkZWNpbWFscyIsInRvdGFsX3N1cHBseSIsIm1heF9zdXBwbHkiLCJ0cmVhc3VyeV9hY2NvdW50X2lkIiwiYWRtaW5fa2V5IiwiZ2V0VG9rZW5Ib2xkZXJzIiwibGltaXQiLCJ0b2tlbkluZm8iLCJwYXJhbXMiLCJvcmRlciIsImhvbGRlcnMiLCJiYWxhbmNlcyIsInRvdGFsQWNjb3VudHMiLCJsaW5rcyIsIm5leHQiLCJsZW5ndGgiLCJOdW1iZXIiLCJvbmVUb2tlbiIsIkJpZ0ludCIsInN0YXRzIiwiYWNjb3VudHNBYm92ZU9uZSIsImZpbHRlciIsImhvbGRlciIsImJhbGFuY2UiLCJzb3J0ZWRIb2xkZXJzIiwic29ydCIsImEiLCJiIiwiYmFsYW5jZUEiLCJiYWxhbmNlQiIsInNsaWNlIiwidG90YWxTdXBwbHlCaWdJbnQiLCJmb3JtYXR0ZWRIb2xkZXJzIiwibWFwIiwiaG9sZGVyQmFsYW5jZSIsInBlcmNlbnRhZ2UiLCJhY2NvdW50IiwiZ2V0QWNjb3VudEluZm8iLCJhY2NvdW50SWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/hedera.ts\n"));

/***/ })

});